# Shell profile - export TERM=xterm-256color
# See: https://wiki.archlinux.org/index.php/Tmux#Setting_the_correct_term
#
# Basic setup
set -g default-terminal "screen-256color"
set-option -g default-shell /bin/zsh
set -g utf8
set-window-option -g utf8 on
set -sg escape-time 1
set -g base-index 1
set -g pane-base-index 1

# Shortcuts
## Prefix CTRL-Space

## P d - detach
## P c - create win
## P , - rename win
## P n / p - next/prev win
## P [1-9] - win N
## P f - find win
## P w - win list
## P & - kill win
## P <space> - change layout
## P : - command line

## P r - reload tmux config
## P h / j / k / l - select a pane
## P H / J - horizontal / vertical split (orig keys: % / ")
## P arrows - resize pane
## P C-H / C-L - move between windows

## P [ - enter copy mode, vim keys to move; v - start selection; y - copy; q - quit mode
## P ] - paste

unbind C-b
#set -g prefix C-Space
#bind Space send-prefix
set -g prefix C-a
bind C-a send-prefix

bind r source-file ~/.tmux.conf \; display 'Reloaded .tmux.conf'

# panes and windows
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
#bind H split-window -h
#bind J split-window -v

bind j split-window -v
bind l split-window -h

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# clear screen
bind C-l send-keys 'C-l'

# -r - repeatable binding
bind -r Left resize-pane -L 5
bind -r Down resize-pane -D 5
bind -r Up resize-pane -U 5
bind -r Right resize-pane -R 5

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

setw -g mode-keys vi
#unbind [
#bind Escape copy-mode
#unbind p
#bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# :capture-pane - copy visible pane
# tmux show-buffer | :show-buffer - show copied text
# tmux capture-pane && tmux save-buffer buffer.txt
# Prefix + = - list copy buffers
#
# choose-buffer to chose active buffer
#
# Prefix + ! - pane->window
# join-pane -s 1 - window->pane, Take window 1 and join it to the current window
# join-pane -s 1.0 - grab the first pane of the first window and join it to our current window
#                    To take it a step further, we can even specify a source session, using the
#                    notation [session_name]:[window].[pane], and we can specify a target window using
#                    the -t flag using the same notation.

bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# mouse off
setw -g mode-mouse off
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off

# status bar settings
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right "#[fg=cyan]%d %b %R"
set -g status-utf8 on
set -g status-interval 60
set -g status-justify centre

# see windows activity
setw -g monitor-activity on
set -g visual-activity on

# https://github.com/seebi/tmux-colors-solarized
## COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

